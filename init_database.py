#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
"""

import os
import sys
import logging
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É src –≤ –ø—É—Ç—å Python
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

load_dotenv()

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def initialize_database():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞–ø—Ä—è–º—É—é –∏–∑ core.py
        logger.info("–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º app –∏ db –Ω–∞–ø—Ä—è–º—É—é –∏–∑ core...")
        from core import app, db
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏
        logger.info("–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏...")
        import user
        import application  
        import job
        import subscription
        
        with app.app_context():
            logger.info("–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏...")
            
            # –í—ã–≤–æ–¥–∏–º –≤—Å–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
            tables = list(db.metadata.tables.keys())
            logger.info(f"–ù–∞–π–¥–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏/—Ç–∞–±–ª–∏—Ü—ã: {tables}")
            
            if not tables:
                logger.warning("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –º–æ–¥–µ–ª–∏!")
                logger.info("–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã...")
                logger.info(f"user –º–æ–¥—É–ª—å: {dir(user)}")
                logger.info(f"application –º–æ–¥—É–ª—å: {dir(application)}")
                logger.info(f"job –º–æ–¥—É–ª—å: {dir(job)}")
                logger.info(f"subscription –º–æ–¥—É–ª—å: {dir(subscription)}")
            
            logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü...")
            db.create_all()
            logger.info("‚úÖ –ö–æ–º–∞–Ω–¥–∞ db.create_all() –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–ª–æ—Å—å
            logger.info("–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ...")
            result = db.session.execute("SELECT tablename FROM pg_tables WHERE schemaname = 'public'")
            actual_tables = [row[0] for row in result]
            logger.info(f"–†–µ–∞–ª—å–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ: {actual_tables}")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}", exc_info=True)
        sys.exit(1)

    logger.info("üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    initialize_database()
